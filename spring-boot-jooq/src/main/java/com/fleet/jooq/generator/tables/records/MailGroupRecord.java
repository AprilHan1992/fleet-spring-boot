/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables.records;


import com.fleet.jooq.generator.tables.MailGroup;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 邮箱组信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MailGroupRecord extends UpdatableRecordImpl<MailGroupRecord> implements Record4<UInteger, String, String, UInteger> {

    private static final long serialVersionUID = 29893951;

    /**
     * Setter for <code>fleet-test.mail_group.id</code>. 邮箱组id
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>fleet-test.mail_group.id</code>. 邮箱组id
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>fleet-test.mail_group.name</code>. 邮箱组名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fleet-test.mail_group.name</code>. 邮箱组名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fleet-test.mail_group.tos</code>. 邮箱（多个邮箱之间用","隔开）
     */
    public void setTos(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fleet-test.mail_group.tos</code>. 邮箱（多个邮箱之间用","隔开）
     */
    public String getTos() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fleet-test.mail_group.deleted</code>. 是否删除（1：是，0：否）
     */
    public void setDeleted(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>fleet-test.mail_group.deleted</code>. 是否删除（1：是，0：否）
     */
    public UInteger getDeleted() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, String, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, String, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return MailGroup.MAIL_GROUP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return MailGroup.MAIL_GROUP.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MailGroup.MAIL_GROUP.TOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return MailGroup.MAIL_GROUP.DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTos();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTos();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailGroupRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailGroupRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailGroupRecord value3(String value) {
        setTos(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailGroupRecord value4(UInteger value) {
        setDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailGroupRecord values(UInteger value1, String value2, String value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MailGroupRecord
     */
    public MailGroupRecord() {
        super(MailGroup.MAIL_GROUP);
    }

    /**
     * Create a detached, initialised MailGroupRecord
     */
    public MailGroupRecord(UInteger id, String name, String tos, UInteger deleted) {
        super(MailGroup.MAIL_GROUP);

        set(0, id);
        set(1, name);
        set(2, tos);
        set(3, deleted);
    }
}
