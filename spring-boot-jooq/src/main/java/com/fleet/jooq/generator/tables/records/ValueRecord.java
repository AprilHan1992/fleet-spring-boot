/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables.records;


import com.fleet.jooq.generator.tables.Value;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ValueRecord extends UpdatableRecordImpl<ValueRecord> implements Record8<UInteger, UInteger, String, String, String, UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = 1174628572;

    /**
     * Setter for <code>fleet-test.value.id</code>. 字典值id
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>fleet-test.value.id</code>. 字典值id
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>fleet-test.value.dict_id</code>. 字典id
     */
    public void setDictId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>fleet-test.value.dict_id</code>. 字典id
     */
    public UInteger getDictId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>fleet-test.value.code</code>. 字典标签
     */
    public void setCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fleet-test.value.code</code>. 字典标签
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fleet-test.value.value</code>. 字典值
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>fleet-test.value.value</code>. 字典值
     */
    public String getValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>fleet-test.value.remark</code>. 字典值描述
     */
    public void setRemark(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>fleet-test.value.remark</code>. 字典值描述
     */
    public String getRemark() {
        return (String) get(4);
    }

    /**
     * Setter for <code>fleet-test.value.sort</code>. 排序（数字越大，越排前）
     */
    public void setSort(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>fleet-test.value.sort</code>. 排序（数字越大，越排前）
     */
    public UInteger getSort() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>fleet-test.value.is_default</code>. 是否是默认值（1：是，0：否）
     */
    public void setIsDefault(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>fleet-test.value.is_default</code>. 是否是默认值（1：是，0：否）
     */
    public UInteger getIsDefault() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>fleet-test.value.deleted</code>. 是否删除（1：是，0：否）
     */
    public void setDeleted(UInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>fleet-test.value.deleted</code>. 是否删除（1：是，0：否）
     */
    public UInteger getDeleted() {
        return (UInteger) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UInteger, UInteger, String, String, String, UInteger, UInteger, UInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UInteger, UInteger, String, String, String, UInteger, UInteger, UInteger> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Value.VALUE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Value.VALUE.DICT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Value.VALUE.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Value.VALUE.VALUE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Value.VALUE.REMARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field6() {
        return Value.VALUE.SORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field7() {
        return Value.VALUE.IS_DEFAULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field8() {
        return Value.VALUE.DELETED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getDictId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component6() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component7() {
        return getIsDefault();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component8() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getDictId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRemark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value6() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value7() {
        return getIsDefault();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value8() {
        return getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value2(UInteger value) {
        setDictId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value3(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value4(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value5(String value) {
        setRemark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value6(UInteger value) {
        setSort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value7(UInteger value) {
        setIsDefault(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord value8(UInteger value) {
        setDeleted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ValueRecord values(UInteger value1, UInteger value2, String value3, String value4, String value5, UInteger value6, UInteger value7, UInteger value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ValueRecord
     */
    public ValueRecord() {
        super(Value.VALUE);
    }

    /**
     * Create a detached, initialised ValueRecord
     */
    public ValueRecord(UInteger id, UInteger dictId, String code, String value, String remark, UInteger sort, UInteger isDefault, UInteger deleted) {
        super(Value.VALUE);

        set(0, id);
        set(1, dictId);
        set(2, code);
        set(3, value);
        set(4, remark);
        set(5, sort);
        set(6, isDefault);
        set(7, deleted);
    }
}
