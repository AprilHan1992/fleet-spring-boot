/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables;


import com.fleet.jooq.generator.FleetTest;
import com.fleet.jooq.generator.Indexes;
import com.fleet.jooq.generator.Keys;
import com.fleet.jooq.generator.tables.records.RoleMenuRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 用户与角色对应关系
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleMenu extends TableImpl<RoleMenuRecord> {

    private static final long serialVersionUID = -1623921723;

    /**
     * The reference instance of <code>fleet-test.role_menu</code>
     */
    public static final RoleMenu ROLE_MENU = new RoleMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoleMenuRecord> getRecordType() {
        return RoleMenuRecord.class;
    }

    /**
     * The column <code>fleet-test.role_menu.id</code>. 角色对应菜单id
     */
    public final TableField<RoleMenuRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "角色对应菜单id");

    /**
     * The column <code>fleet-test.role_menu.role_id</code>. 角色id
     */
    public final TableField<RoleMenuRecord, UInteger> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "角色id");

    /**
     * The column <code>fleet-test.role_menu.menu_id</code>. 菜单id
     */
    public final TableField<RoleMenuRecord, UInteger> MENU_ID = createField("menu_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "菜单id");

    /**
     * The column <code>fleet-test.role_menu.deleted</code>. 是否删除（1：是，0：否）
     */
    public final TableField<RoleMenuRecord, UInteger> DELETED = createField("deleted", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "是否删除（1：是，0：否）");

    /**
     * Create a <code>fleet-test.role_menu</code> table reference
     */
    public RoleMenu() {
        this(DSL.name("role_menu"), null);
    }

    /**
     * Create an aliased <code>fleet-test.role_menu</code> table reference
     */
    public RoleMenu(String alias) {
        this(DSL.name(alias), ROLE_MENU);
    }

    /**
     * Create an aliased <code>fleet-test.role_menu</code> table reference
     */
    public RoleMenu(Name alias) {
        this(alias, ROLE_MENU);
    }

    private RoleMenu(Name alias, Table<RoleMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoleMenu(Name alias, Table<RoleMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户与角色对应关系"));
    }

    public <O extends Record> RoleMenu(Table<O> child, ForeignKey<O, RoleMenuRecord> key) {
        super(child, key, ROLE_MENU);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FleetTest.FLEET_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROLE_MENU_PRIMARY, Indexes.ROLE_MENU_UNI_ROLE_MENU);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoleMenuRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_ROLE_MENU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoleMenuRecord> getPrimaryKey() {
        return Keys.KEY_ROLE_MENU_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoleMenuRecord>> getKeys() {
        return Arrays.<UniqueKey<RoleMenuRecord>>asList(Keys.KEY_ROLE_MENU_PRIMARY, Keys.KEY_ROLE_MENU_UNI_ROLE_MENU);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleMenu as(String alias) {
        return new RoleMenu(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleMenu as(Name alias) {
        return new RoleMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RoleMenu rename(String name) {
        return new RoleMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RoleMenu rename(Name name) {
        return new RoleMenu(name, null);
    }
}
