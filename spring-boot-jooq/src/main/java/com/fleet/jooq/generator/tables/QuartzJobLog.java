/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables;


import com.fleet.jooq.generator.FleetTest;
import com.fleet.jooq.generator.Indexes;
import com.fleet.jooq.generator.Keys;
import com.fleet.jooq.generator.tables.records.QuartzJobLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuartzJobLog extends TableImpl<QuartzJobLogRecord> {

    private static final long serialVersionUID = -848278737;

    /**
     * The reference instance of <code>fleet-test.quartz_job_log</code>
     */
    public static final QuartzJobLog QUARTZ_JOB_LOG = new QuartzJobLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuartzJobLogRecord> getRecordType() {
        return QuartzJobLogRecord.class;
    }

    /**
     * The column <code>fleet-test.quartz_job_log.job_log_id</code>. 日志id
     */
    public final TableField<QuartzJobLogRecord, UInteger> JOB_LOG_ID = createField("job_log_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "日志id");

    /**
     * The column <code>fleet-test.quartz_job_log.job_id</code>. 定时器id
     */
    public final TableField<QuartzJobLogRecord, UInteger> JOB_ID = createField("job_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "定时器id");

    /**
     * The column <code>fleet-test.quartz_job_log.job_name</code>. 定时器名称
     */
    public final TableField<QuartzJobLogRecord, String> JOB_NAME = createField("job_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "定时器名称");

    /**
     * The column <code>fleet-test.quartz_job_log.bean_name</code>. Bean名称
     */
    public final TableField<QuartzJobLogRecord, String> BEAN_NAME = createField("bean_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "Bean名称");

    /**
     * The column <code>fleet-test.quartz_job_log.method_name</code>. 方法名称
     */
    public final TableField<QuartzJobLogRecord, String> METHOD_NAME = createField("method_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "方法名称");

    /**
     * The column <code>fleet-test.quartz_job_log.param</code>. 参数
     */
    public final TableField<QuartzJobLogRecord, String> PARAM = createField("param", org.jooq.impl.SQLDataType.VARCHAR(128), this, "参数");

    /**
     * The column <code>fleet-test.quartz_job_log.cron_expression</code>. cron表达式
     */
    public final TableField<QuartzJobLogRecord, String> CRON_EXPRESSION = createField("cron_expression", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "cron表达式");

    /**
     * The column <code>fleet-test.quartz_job_log.state</code>. 任务状态 （1：成功，0：失败）
     */
    public final TableField<QuartzJobLogRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "任务状态 （1：成功，0：失败）");

    /**
     * The column <code>fleet-test.quartz_job_log.error</code>. 失败信息
     */
    public final TableField<QuartzJobLogRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "失败信息");

    /**
     * The column <code>fleet-test.quartz_job_log.millis</code>. 执行时间（单位：毫秒）
     */
    public final TableField<QuartzJobLogRecord, Long> MILLIS = createField("millis", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "执行时间（单位：毫秒）");

    /**
     * The column <code>fleet-test.quartz_job_log.create_time</code>. 创建时间
     */
    public final TableField<QuartzJobLogRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * Create a <code>fleet-test.quartz_job_log</code> table reference
     */
    public QuartzJobLog() {
        this(DSL.name("quartz_job_log"), null);
    }

    /**
     * Create an aliased <code>fleet-test.quartz_job_log</code> table reference
     */
    public QuartzJobLog(String alias) {
        this(DSL.name(alias), QUARTZ_JOB_LOG);
    }

    /**
     * Create an aliased <code>fleet-test.quartz_job_log</code> table reference
     */
    public QuartzJobLog(Name alias) {
        this(alias, QUARTZ_JOB_LOG);
    }

    private QuartzJobLog(Name alias, Table<QuartzJobLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuartzJobLog(Name alias, Table<QuartzJobLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> QuartzJobLog(Table<O> child, ForeignKey<O, QuartzJobLogRecord> key) {
        super(child, key, QUARTZ_JOB_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FleetTest.FLEET_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.QUARTZ_JOB_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<QuartzJobLogRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_QUARTZ_JOB_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuartzJobLogRecord> getPrimaryKey() {
        return Keys.KEY_QUARTZ_JOB_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuartzJobLogRecord>> getKeys() {
        return Arrays.<UniqueKey<QuartzJobLogRecord>>asList(Keys.KEY_QUARTZ_JOB_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuartzJobLog as(String alias) {
        return new QuartzJobLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuartzJobLog as(Name alias) {
        return new QuartzJobLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuartzJobLog rename(String name) {
        return new QuartzJobLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QuartzJobLog rename(Name name) {
        return new QuartzJobLog(name, null);
    }
}
