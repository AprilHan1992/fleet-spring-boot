/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables.records;


import com.fleet.jooq.generator.tables.Permission;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 权限管理
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PermissionRecord extends UpdatableRecordImpl<PermissionRecord> implements Record5<UInteger, String, String, UInteger, UInteger> {

    private static final long serialVersionUID = 125067026;

    /**
     * Setter for <code>fleet-test.permission.permission_id</code>. 权限标识
     */
    public void setPermissionId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>fleet-test.permission.permission_id</code>. 权限标识
     */
    public UInteger getPermissionId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>fleet-test.permission.permission_name</code>. 权限名称
     */
    public void setPermissionName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fleet-test.permission.permission_name</code>. 权限名称
     */
    public String getPermissionName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fleet-test.permission.permission_code</code>. 权限代码（如果权限项是包容关系，使用层级关系）
     */
    public void setPermissionCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>fleet-test.permission.permission_code</code>. 权限代码（如果权限项是包容关系，使用层级关系）
     */
    public String getPermissionCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>fleet-test.permission.permission_order</code>. 排序（数字越大，越排前）
     */
    public void setPermissionOrder(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>fleet-test.permission.permission_order</code>. 排序（数字越大，越排前）
     */
    public UInteger getPermissionOrder() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>fleet-test.permission.upper_permission_id</code>. 上一级权限
     */
    public void setUpperPermissionId(UInteger value) {
        set(4, value);
    }

    /**
     * Getter for <code>fleet-test.permission.upper_permission_id</code>. 上一级权限
     */
    public UInteger getUpperPermissionId() {
        return (UInteger) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UInteger, String, String, UInteger, UInteger> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UInteger, String, String, UInteger, UInteger> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Permission.PERMISSION.PERMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Permission.PERMISSION.PERMISSION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Permission.PERMISSION.PERMISSION_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return Permission.PERMISSION.PERMISSION_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field5() {
        return Permission.PERMISSION.UPPER_PERMISSION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPermissionName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPermissionCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getPermissionOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component5() {
        return getUpperPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPermissionName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPermissionCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getPermissionOrder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value5() {
        return getUpperPermissionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRecord value1(UInteger value) {
        setPermissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRecord value2(String value) {
        setPermissionName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRecord value3(String value) {
        setPermissionCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRecord value4(UInteger value) {
        setPermissionOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRecord value5(UInteger value) {
        setUpperPermissionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PermissionRecord values(UInteger value1, String value2, String value3, UInteger value4, UInteger value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PermissionRecord
     */
    public PermissionRecord() {
        super(Permission.PERMISSION);
    }

    /**
     * Create a detached, initialised PermissionRecord
     */
    public PermissionRecord(UInteger permissionId, String permissionName, String permissionCode, UInteger permissionOrder, UInteger upperPermissionId) {
        super(Permission.PERMISSION);

        set(0, permissionId);
        set(1, permissionName);
        set(2, permissionCode);
        set(3, permissionOrder);
        set(4, upperPermissionId);
    }
}
