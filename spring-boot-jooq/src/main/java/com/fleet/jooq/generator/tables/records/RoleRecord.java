/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables.records;


import com.fleet.jooq.generator.tables.Role;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * 角色信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record4<UInteger, String, Integer, UInteger> {

    private static final long serialVersionUID = -627425213;

    /**
     * Setter for <code>fleet-test.role.id</code>. 角色id
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>fleet-test.role.id</code>. 角色id
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>fleet-test.role.name</code>. 角色名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>fleet-test.role.name</code>. 角色名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>fleet-test.role.sort</code>. 排序（数字越大，越排前）
     */
    public void setSort(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>fleet-test.role.sort</code>. 排序（数字越大，越排前）
     */
    public Integer getSort() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>fleet-test.role.upper_id</code>. 上一级角色id
     */
    public void setUpperId(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>fleet-test.role.upper_id</code>. 上一级角色id
     */
    public UInteger getUpperId() {
        return (UInteger) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, Integer, UInteger> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UInteger, String, Integer, UInteger> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Role.ROLE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Role.ROLE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Role.ROLE.SORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return Role.ROLE.UPPER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getUpperId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getUpperId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value3(Integer value) {
        setSort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord value4(UInteger value) {
        setUpperId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoleRecord values(UInteger value1, String value2, Integer value3, UInteger value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(UInteger id, String name, Integer sort, UInteger upperId) {
        super(Role.ROLE);

        set(0, id);
        set(1, name);
        set(2, sort);
        set(3, upperId);
    }
}
