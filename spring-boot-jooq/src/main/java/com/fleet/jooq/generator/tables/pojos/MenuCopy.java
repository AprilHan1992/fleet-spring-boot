/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.types.UInteger;


/**
 * 菜单管理
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuCopy implements Serializable {

    private static final long serialVersionUID = -1326996237;

    private UInteger      id;
    private UInteger      type;
    private String        name;
    private String        icon;
    private String        desc;
    private String        href;
    private String        target;
    private String        permit;
    private UInteger      sort;
    private UInteger      opened;
    private UInteger      enabled;
    private UInteger      creatorId;
    private LocalDateTime createTime;
    private UInteger      editorId;
    private LocalDateTime editTime;
    private UInteger      upperId;
    private UInteger      deleted;

    public MenuCopy() {}

    public MenuCopy(MenuCopy value) {
        this.id = value.id;
        this.type = value.type;
        this.name = value.name;
        this.icon = value.icon;
        this.desc = value.desc;
        this.href = value.href;
        this.target = value.target;
        this.permit = value.permit;
        this.sort = value.sort;
        this.opened = value.opened;
        this.enabled = value.enabled;
        this.creatorId = value.creatorId;
        this.createTime = value.createTime;
        this.editorId = value.editorId;
        this.editTime = value.editTime;
        this.upperId = value.upperId;
        this.deleted = value.deleted;
    }

    public MenuCopy(
        UInteger      id,
        UInteger      type,
        String        name,
        String        icon,
        String        desc,
        String        href,
        String        target,
        String        permit,
        UInteger      sort,
        UInteger      opened,
        UInteger      enabled,
        UInteger      creatorId,
        LocalDateTime createTime,
        UInteger      editorId,
        LocalDateTime editTime,
        UInteger      upperId,
        UInteger      deleted
    ) {
        this.id = id;
        this.type = type;
        this.name = name;
        this.icon = icon;
        this.desc = desc;
        this.href = href;
        this.target = target;
        this.permit = permit;
        this.sort = sort;
        this.opened = opened;
        this.enabled = enabled;
        this.creatorId = creatorId;
        this.createTime = createTime;
        this.editorId = editorId;
        this.editTime = editTime;
        this.upperId = upperId;
        this.deleted = deleted;
    }

    public UInteger getId() {
        return this.id;
    }

    public void setId(UInteger id) {
        this.id = id;
    }

    public UInteger getType() {
        return this.type;
    }

    public void setType(UInteger type) {
        this.type = type;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getIcon() {
        return this.icon;
    }

    public void setIcon(String icon) {
        this.icon = icon;
    }

    public String getDesc() {
        return this.desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }

    public String getHref() {
        return this.href;
    }

    public void setHref(String href) {
        this.href = href;
    }

    public String getTarget() {
        return this.target;
    }

    public void setTarget(String target) {
        this.target = target;
    }

    public String getPermit() {
        return this.permit;
    }

    public void setPermit(String permit) {
        this.permit = permit;
    }

    public UInteger getSort() {
        return this.sort;
    }

    public void setSort(UInteger sort) {
        this.sort = sort;
    }

    public UInteger getOpened() {
        return this.opened;
    }

    public void setOpened(UInteger opened) {
        this.opened = opened;
    }

    public UInteger getEnabled() {
        return this.enabled;
    }

    public void setEnabled(UInteger enabled) {
        this.enabled = enabled;
    }

    public UInteger getCreatorId() {
        return this.creatorId;
    }

    public void setCreatorId(UInteger creatorId) {
        this.creatorId = creatorId;
    }

    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    public UInteger getEditorId() {
        return this.editorId;
    }

    public void setEditorId(UInteger editorId) {
        this.editorId = editorId;
    }

    public LocalDateTime getEditTime() {
        return this.editTime;
    }

    public void setEditTime(LocalDateTime editTime) {
        this.editTime = editTime;
    }

    public UInteger getUpperId() {
        return this.upperId;
    }

    public void setUpperId(UInteger upperId) {
        this.upperId = upperId;
    }

    public UInteger getDeleted() {
        return this.deleted;
    }

    public void setDeleted(UInteger deleted) {
        this.deleted = deleted;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MenuCopy (");

        sb.append(id);
        sb.append(", ").append(type);
        sb.append(", ").append(name);
        sb.append(", ").append(icon);
        sb.append(", ").append(desc);
        sb.append(", ").append(href);
        sb.append(", ").append(target);
        sb.append(", ").append(permit);
        sb.append(", ").append(sort);
        sb.append(", ").append(opened);
        sb.append(", ").append(enabled);
        sb.append(", ").append(creatorId);
        sb.append(", ").append(createTime);
        sb.append(", ").append(editorId);
        sb.append(", ").append(editTime);
        sb.append(", ").append(upperId);
        sb.append(", ").append(deleted);

        sb.append(")");
        return sb.toString();
    }
}
