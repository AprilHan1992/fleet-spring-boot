/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables;


import com.fleet.jooq.generator.FleetTest;
import com.fleet.jooq.generator.Indexes;
import com.fleet.jooq.generator.Keys;
import com.fleet.jooq.generator.tables.records.UserDeptRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 用户与角色对应关系
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDept extends TableImpl<UserDeptRecord> {

    private static final long serialVersionUID = 1584648329;

    /**
     * The reference instance of <code>fleet-test.user_dept</code>
     */
    public static final UserDept USER_DEPT = new UserDept();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDeptRecord> getRecordType() {
        return UserDeptRecord.class;
    }

    /**
     * The column <code>fleet-test.user_dept.user_id</code>. 用户id
     */
    public final TableField<UserDeptRecord, UInteger> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "用户id");

    /**
     * The column <code>fleet-test.user_dept.dept_id</code>. 部门id
     */
    public final TableField<UserDeptRecord, UInteger> DEPT_ID = createField("dept_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "部门id");

    /**
     * The column <code>fleet-test.user_dept.deleted</code>. 是否删除（1：是，0：否）
     */
    public final TableField<UserDeptRecord, UInteger> DELETED = createField("deleted", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "是否删除（1：是，0：否）");

    /**
     * Create a <code>fleet-test.user_dept</code> table reference
     */
    public UserDept() {
        this(DSL.name("user_dept"), null);
    }

    /**
     * Create an aliased <code>fleet-test.user_dept</code> table reference
     */
    public UserDept(String alias) {
        this(DSL.name(alias), USER_DEPT);
    }

    /**
     * Create an aliased <code>fleet-test.user_dept</code> table reference
     */
    public UserDept(Name alias) {
        this(alias, USER_DEPT);
    }

    private UserDept(Name alias, Table<UserDeptRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDept(Name alias, Table<UserDeptRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户与角色对应关系"));
    }

    public <O extends Record> UserDept(Table<O> child, ForeignKey<O, UserDeptRecord> key) {
        super(child, key, USER_DEPT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FleetTest.FLEET_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_DEPT_UNI_USER_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserDeptRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDeptRecord>>asList(Keys.KEY_USER_DEPT_UNI_USER_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDept as(String alias) {
        return new UserDept(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserDept as(Name alias) {
        return new UserDept(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDept rename(String name) {
        return new UserDept(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDept rename(Name name) {
        return new UserDept(name, null);
    }
}
