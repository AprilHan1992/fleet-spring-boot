/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables;


import com.fleet.jooq.generator.FleetTest;
import com.fleet.jooq.generator.Indexes;
import com.fleet.jooq.generator.Keys;
import com.fleet.jooq.generator.tables.records.RecommendspsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Recommendsps extends TableImpl<RecommendspsRecord> {

    private static final long serialVersionUID = 6547840;

    /**
     * The reference instance of <code>fleet-test.recommendsps</code>
     */
    public static final Recommendsps RECOMMENDSPS = new Recommendsps();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecommendspsRecord> getRecordType() {
        return RecommendspsRecord.class;
    }

    /**
     * The column <code>fleet-test.recommendsps.id</code>.
     */
    public final TableField<RecommendspsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>fleet-test.recommendsps.initiator</code>. 拟稿人
     */
    public final TableField<RecommendspsRecord, String> INITIATOR = createField("initiator", org.jooq.impl.SQLDataType.CLOB, this, "拟稿人");

    /**
     * The column <code>fleet-test.recommendsps.taskname</code>. 审批节点
     */
    public final TableField<RecommendspsRecord, String> TASKNAME = createField("taskname", org.jooq.impl.SQLDataType.CLOB, this, "审批节点");

    /**
     * The column <code>fleet-test.recommendsps.definitionKey</code>. 流程类型
     */
    public final TableField<RecommendspsRecord, String> DEFINITIONKEY = createField("definitionKey", org.jooq.impl.SQLDataType.CLOB, this, "流程类型");

    /**
     * The column <code>fleet-test.recommendsps.sps</code>. 审批人
     */
    public final TableField<RecommendspsRecord, String> SPS = createField("sps", org.jooq.impl.SQLDataType.CLOB, this, "审批人");

    /**
     * The column <code>fleet-test.recommendsps.spsName</code>. 审批人姓名
     */
    public final TableField<RecommendspsRecord, String> SPSNAME = createField("spsName", org.jooq.impl.SQLDataType.VARCHAR(255), this, "审批人姓名");

    /**
     * The column <code>fleet-test.recommendsps.spsAssignes</code>. 审批人角色
     */
    public final TableField<RecommendspsRecord, String> SPSASSIGNES = createField("spsAssignes", org.jooq.impl.SQLDataType.VARCHAR(255), this, "审批人角色");

    /**
     * The column <code>fleet-test.recommendsps.variable</code>. 变量
     */
    public final TableField<RecommendspsRecord, String> VARIABLE = createField("variable", org.jooq.impl.SQLDataType.VARCHAR(255), this, "变量");

    /**
     * Create a <code>fleet-test.recommendsps</code> table reference
     */
    public Recommendsps() {
        this(DSL.name("recommendsps"), null);
    }

    /**
     * Create an aliased <code>fleet-test.recommendsps</code> table reference
     */
    public Recommendsps(String alias) {
        this(DSL.name(alias), RECOMMENDSPS);
    }

    /**
     * Create an aliased <code>fleet-test.recommendsps</code> table reference
     */
    public Recommendsps(Name alias) {
        this(alias, RECOMMENDSPS);
    }

    private Recommendsps(Name alias, Table<RecommendspsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Recommendsps(Name alias, Table<RecommendspsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Recommendsps(Table<O> child, ForeignKey<O, RecommendspsRecord> key) {
        super(child, key, RECOMMENDSPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FleetTest.FLEET_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECOMMENDSPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RecommendspsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RECOMMENDSPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RecommendspsRecord> getPrimaryKey() {
        return Keys.KEY_RECOMMENDSPS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RecommendspsRecord>> getKeys() {
        return Arrays.<UniqueKey<RecommendspsRecord>>asList(Keys.KEY_RECOMMENDSPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Recommendsps as(String alias) {
        return new Recommendsps(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Recommendsps as(Name alias) {
        return new Recommendsps(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Recommendsps rename(String name) {
        return new Recommendsps(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Recommendsps rename(Name name) {
        return new Recommendsps(name, null);
    }
}
