/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables;


import com.fleet.jooq.generator.FleetTest;
import com.fleet.jooq.generator.Indexes;
import com.fleet.jooq.generator.Keys;
import com.fleet.jooq.generator.tables.records.CheckContentRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckContent extends TableImpl<CheckContentRecord> {

    private static final long serialVersionUID = 1711289916;

    /**
     * The reference instance of <code>fleet-test.check_content</code>
     */
    public static final CheckContent CHECK_CONTENT = new CheckContent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CheckContentRecord> getRecordType() {
        return CheckContentRecord.class;
    }

    /**
     * The column <code>fleet-test.check_content.check_content_id</code>.
     */
    public final TableField<CheckContentRecord, Integer> CHECK_CONTENT_ID = createField("check_content_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>fleet-test.check_content.index</code>.
     */
    public final TableField<CheckContentRecord, Integer> INDEX = createField("index", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fleet-test.check_content.check_item_id</code>.
     */
    public final TableField<CheckContentRecord, Integer> CHECK_ITEM_ID = createField("check_item_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>fleet-test.check_content.check_content</code>.
     */
    public final TableField<CheckContentRecord, String> CHECK_CONTENT_ = createField("check_content", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>fleet-test.check_content.check_standard</code>.
     */
    public final TableField<CheckContentRecord, String> CHECK_STANDARD = createField("check_standard", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>fleet-test.check_content.standard_score</code>.
     */
    public final TableField<CheckContentRecord, Integer> STANDARD_SCORE = createField("standard_score", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>fleet-test.check_content</code> table reference
     */
    public CheckContent() {
        this(DSL.name("check_content"), null);
    }

    /**
     * Create an aliased <code>fleet-test.check_content</code> table reference
     */
    public CheckContent(String alias) {
        this(DSL.name(alias), CHECK_CONTENT);
    }

    /**
     * Create an aliased <code>fleet-test.check_content</code> table reference
     */
    public CheckContent(Name alias) {
        this(alias, CHECK_CONTENT);
    }

    private CheckContent(Name alias, Table<CheckContentRecord> aliased) {
        this(alias, aliased, null);
    }

    private CheckContent(Name alias, Table<CheckContentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CheckContent(Table<O> child, ForeignKey<O, CheckContentRecord> key) {
        super(child, key, CHECK_CONTENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FleetTest.FLEET_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CHECK_CONTENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CheckContentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CHECK_CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CheckContentRecord> getPrimaryKey() {
        return Keys.KEY_CHECK_CONTENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CheckContentRecord>> getKeys() {
        return Arrays.<UniqueKey<CheckContentRecord>>asList(Keys.KEY_CHECK_CONTENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckContent as(String alias) {
        return new CheckContent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckContent as(Name alias) {
        return new CheckContent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CheckContent rename(String name) {
        return new CheckContent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CheckContent rename(Name name) {
        return new CheckContent(name, null);
    }
}
