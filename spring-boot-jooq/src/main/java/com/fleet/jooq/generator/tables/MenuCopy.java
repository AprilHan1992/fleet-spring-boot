/*
 * This file is generated by jOOQ.
 */
package com.fleet.jooq.generator.tables;


import com.fleet.jooq.generator.FleetTest;
import com.fleet.jooq.generator.Indexes;
import com.fleet.jooq.generator.Keys;
import com.fleet.jooq.generator.tables.records.MenuCopyRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * 菜单管理
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuCopy extends TableImpl<MenuCopyRecord> {

    private static final long serialVersionUID = -1644143461;

    /**
     * The reference instance of <code>fleet-test.menu_copy</code>
     */
    public static final MenuCopy MENU_COPY = new MenuCopy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MenuCopyRecord> getRecordType() {
        return MenuCopyRecord.class;
    }

    /**
     * The column <code>fleet-test.menu_copy.id</code>. 菜单id
     */
    public final TableField<MenuCopyRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "菜单id");

    /**
     * The column <code>fleet-test.menu_copy.type</code>. 菜单类型（1：目录，2：菜单，3：权限标识）
     */
    public final TableField<MenuCopyRecord, UInteger> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "菜单类型（1：目录，2：菜单，3：权限标识）");

    /**
     * The column <code>fleet-test.menu_copy.name</code>. 菜单名称
     */
    public final TableField<MenuCopyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "菜单名称");

    /**
     * The column <code>fleet-test.menu_copy.icon</code>. 菜单图标
     */
    public final TableField<MenuCopyRecord, String> ICON = createField("icon", org.jooq.impl.SQLDataType.VARCHAR(128), this, "菜单图标");

    /**
     * The column <code>fleet-test.menu_copy.desc</code>. 菜单描述
     */
    public final TableField<MenuCopyRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR(128), this, "菜单描述");

    /**
     * The column <code>fleet-test.menu_copy.href</code>. 资源路径
     */
    public final TableField<MenuCopyRecord, String> HREF = createField("href", org.jooq.impl.SQLDataType.VARCHAR(255), this, "资源路径");

    /**
     * The column <code>fleet-test.menu_copy.target</code>. 打开方式（_self：相同框架，Top：当前页，_blank：新建窗口，Parent：父窗口）
     */
    public final TableField<MenuCopyRecord, String> TARGET = createField("target", org.jooq.impl.SQLDataType.VARCHAR(16), this, "打开方式（_self：相同框架，Top：当前页，_blank：新建窗口，Parent：父窗口）");

    /**
     * The column <code>fleet-test.menu_copy.permit</code>. 授权标识（多个之间用","隔开）
     */
    public final TableField<MenuCopyRecord, String> PERMIT = createField("permit", org.jooq.impl.SQLDataType.VARCHAR(255), this, "授权标识（多个之间用\",\"隔开）");

    /**
     * The column <code>fleet-test.menu_copy.sort</code>. 排序（数字越大，越排前）
     */
    public final TableField<MenuCopyRecord, UInteger> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "排序（数字越大，越排前）");

    /**
     * The column <code>fleet-test.menu_copy.opened</code>. 是否公开菜单（1：是，无需分配就可以访问，0：否）
     */
    public final TableField<MenuCopyRecord, UInteger> OPENED = createField("opened", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "是否公开菜单（1：是，无需分配就可以访问，0：否）");

    /**
     * The column <code>fleet-test.menu_copy.enabled</code>. 是否启用（1：是，0：否）
     */
    public final TableField<MenuCopyRecord, UInteger> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "是否启用（1：是，0：否）");

    /**
     * The column <code>fleet-test.menu_copy.creator_id</code>. 创建人
     */
    public final TableField<MenuCopyRecord, UInteger> CREATOR_ID = createField("creator_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "创建人");

    /**
     * The column <code>fleet-test.menu_copy.create_time</code>. 创建时间
     */
    public final TableField<MenuCopyRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>fleet-test.menu_copy.editor_id</code>. 修改人
     */
    public final TableField<MenuCopyRecord, UInteger> EDITOR_ID = createField("editor_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "修改人");

    /**
     * The column <code>fleet-test.menu_copy.edit_time</code>. 修改时间
     */
    public final TableField<MenuCopyRecord, LocalDateTime> EDIT_TIME = createField("edit_time", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "修改时间");

    /**
     * The column <code>fleet-test.menu_copy.upper_id</code>. 上一级菜单id
     */
    public final TableField<MenuCopyRecord, UInteger> UPPER_ID = createField("upper_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "上一级菜单id");

    /**
     * The column <code>fleet-test.menu_copy.deleted</code>. 是否删除（1：是，0：否）
     */
    public final TableField<MenuCopyRecord, UInteger> DELETED = createField("deleted", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "是否删除（1：是，0：否）");

    /**
     * Create a <code>fleet-test.menu_copy</code> table reference
     */
    public MenuCopy() {
        this(DSL.name("menu_copy"), null);
    }

    /**
     * Create an aliased <code>fleet-test.menu_copy</code> table reference
     */
    public MenuCopy(String alias) {
        this(DSL.name(alias), MENU_COPY);
    }

    /**
     * Create an aliased <code>fleet-test.menu_copy</code> table reference
     */
    public MenuCopy(Name alias) {
        this(alias, MENU_COPY);
    }

    private MenuCopy(Name alias, Table<MenuCopyRecord> aliased) {
        this(alias, aliased, null);
    }

    private MenuCopy(Name alias, Table<MenuCopyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("菜单管理"));
    }

    public <O extends Record> MenuCopy(Table<O> child, ForeignKey<O, MenuCopyRecord> key) {
        super(child, key, MENU_COPY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return FleetTest.FLEET_TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MENU_COPY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MenuCopyRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_MENU_COPY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MenuCopyRecord> getPrimaryKey() {
        return Keys.KEY_MENU_COPY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MenuCopyRecord>> getKeys() {
        return Arrays.<UniqueKey<MenuCopyRecord>>asList(Keys.KEY_MENU_COPY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MenuCopy as(String alias) {
        return new MenuCopy(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MenuCopy as(Name alias) {
        return new MenuCopy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuCopy rename(String name) {
        return new MenuCopy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MenuCopy rename(Name name) {
        return new MenuCopy(name, null);
    }
}
